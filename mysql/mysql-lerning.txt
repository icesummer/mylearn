************MYSQL索引设计规范********************************
查询时通过索引进行数据查找，减少磁盘的随机IO，提高查询性能；

* 防止滥用索引（索引不是越多越好，索引可提高效率也可降低效率）
* 建议单张表不要超过5个；
** 避免建立冗余索引和重复索引

一、Innodb是按照主键的顺序组织表，每个innodb都要有一个主键
二、常见索引列建议
** 1. WHERE从句中的列（通常多个联合索引性能更好）
** 2. ORDER BY,GROUP BY,DISTINCT中的字段（通常多个联合索引性能更好）
** 3. JOIN的关联列
三、索引列的顺序是从左到右的顺序使用；
** 所以：1. 能够过滤最多数据的列放在最左侧；即(区分度最大的列如id，唯一列)
** 所以：2. 满足1的情况下，尽量把字段长度小的列放在联合索引的最左侧
** 所以：3. 满足1和2的情况下，使用最频繁的列放到联合索引的左侧
四、对于频繁的查询优先考虑使用覆盖索引
	覆盖索引：包含了所有查询字段的索引：包括出现在{select,where,group by,order by,从句的所有列}-这些列最好一致
	覆盖索引好处：1.避免innodb表进行索引的二次查找；2.可以把随机IO变为顺序IO
五、尽量避免使用外键约束，但需要在外键建立索引
	外键虽然能保证数据的参照完整性，但建议在业务端实现
	外键会影响父表和子表的写操作而影响性能；
	
一、合理的字段类型：优先选择存储需要的最小的数据类型(如 尽量将字符串转为数字类型，)
	如IP地址的存储：INTE_ATON('255.255.255.255')=4294967295,INTE_NTOA(4294967295)='255.255.255.255'

二、避免使用text blob类型，如果使用单独建表，避免使用enum操作不变
三、尽量所有列为NOT NULL
四、日期格式使用TAMPSTAMP或DATETIME
五、财务类数据必须使用DECIMAL，decimal类型为精准浮点数，计算时不丢失精度


SHOW PLUGINS;
name有partition的数据表示支持分区



