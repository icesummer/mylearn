spring的声明式事务处理分两大部分完成：

1、是由spring容器来做的        通知

	负责对事务进行管理
	
		开启事务
		
		提交事务
		
		回滚事务
		
		
2、程序员来完成的部分               目标方法

		对数据库表的增、删、改、查
		
		
		
3、由第一步的通知+第二步的目标方法结合在一起就产生代理对象的方法


1、由spring容器完成的部分：

	
	1、spring的事务管理器
	
		1、告诉spring容器是由什么技术来实现的
		
		2、给事务管理器注入SessionFactory  是用来产生事务的
		
		3、要使SessionFactory起作用，必须注入DataSource(通过加载hibernate的配置文件的形式)
		
	2、<tx:advice>
			<tx:advice id="txManager"
				transaction-manager="hibernateTransactionManager">
				<tx:attributes>
					<tx:method name="save*" isolation="DEFAULT"
						propagation="REQUIRED" read-only="false" />
					<tx:method name="delete*" isolation="DEFAULT"
						propagation="REQUIRED" read-only="false" />
					<tx:method name="query*" isolation="DEFAULT"
						propagation="REQUIRED" read-only="true" />
				</tx:attributes>
			</tx:advice>
			
			
		这个配置告诉spring容器在哪些方法应该进行怎么样的事务控制
		
		
2、由程序员来完成的：

	1、在spring配置文件中注入service和dao
	
		在注入dao的同时，也要注入SessionFactory------->     sessionFactory->session->save/update/delete
		


注解的形式：

1、注解解析器：

	依赖注入的注解解析器
	
	类扫描的注解解析器
	
	事务的注解解析器
	
2、除了tx:advice和<aop:config>这两个配置是不需要

